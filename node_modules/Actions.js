module.exports = function(ScreenBlocks) {

    var vk = require('VK');
    vk.checkToken();

    var message_id = 0; // переменная для хранения ID беседы
    var str_message_obj = ''; //  строковое представление возвращаемого объекта беседы
    var str_friend_obj = ''; // строковое представление возвращаемого объекта списка диалогов
    var old_history = ''; //Старая история переписки
    var history_last_time = 0; // время последнего сообщения



    /**
     * список диалогов слева
     */
    this.getDialogs = function(cnt) {
        vk.request('messages.getDialogs', {
            preview_length: 10,
            count: cnt || 40,
            v: 5.24
        }, function(data) {

            if (data && data.response) {

                var mess = data.response.items;
                var str = '';

                for (var j = 0; j < mess.length; j++) {
                    mess[j].message['name'] = _friend(mess[j].message.user_id);
                }

                // если сообщения не изменились, то завершаем выполнение
                if (str_friend_obj === JSON.stringify(mess)) {
                    return false;
                }

                ScreenBlocks.FriendList.setItems([]);

                // если сообщения изменились то выводим их на экран
                str_friend_obj = JSON.stringify(mess);

                for (var i = 0; i < mess.length; i++) {

                    str = '{bold}' + mess[i].message.name + ':{/bold} ' + mess[i].message.body +
                        '            __|' + mess[i].message.user_id + '|__';

                    if (mess[i].message.read_state === 0) {
                        str = '{red-fg}' + str + '{/red-fg}';
                    }

                    ScreenBlocks.FriendList.add(str);
                }

                ScreenBlocks.FriendList.parent.render();
            }
        });
    }; // End getDialogs



    /**
     * получение сообщений диалога
     */
    this.getHistory = function(id) {

        if (id) {
            message_id = id;
        } else if (message_id === 0) {
            return false;
        }

        vk.request('messages.getHistory', {
            v: 5.25,
            user_id: message_id || id
        }, function(data) {

            var content = '';

            if (data && data.response && data.response.items) {

                var r = data.response.items;
                var mid = []; // id прочитанных сообщений

                if (old_history === JSON.stringify(r)) {
                    return false;
                }

                old_history = JSON.stringify(r);


                for (var i = r.length - 1; i >= 0; i--) {
                    mid.push(r[i].id);

                    content += '{bold}' + _friend(r[i].from_id) + '{/bold} ' +
                        _date(r[i].date) + "\n" +
                        (r[i].attachments ? '{red-fg} ⚝ ⚝ ⚝ attach ⚝ ⚝ ⚝ {/red-fg}' : '') +
                        r[i].body + "\n\n";
                }

                // '⚝'


                // Сообщение прочтено
                read(mid);

            } else {
                // если возникла ошибка
                content = JSON.stringify(data, undefined, 2);
            }

            ScreenBlocks.messages.setContent(content);
            ScreenBlocks.messages.setScrollPerc(100);
            ScreenBlocks.messages.parent.render();
        });

    }; // End getHistory



    /**
    // отправка сообщения пользователю
    'messages.send', {
        user_id: id,
        message: Text
    }*/
    this.send = function(Text) {

        if (!message_id || Text === '' || Text === undefined) {
            return false;
        }

        can_read = true;

        vk.request('messages.send', {
            user_id: message_id,
            message: Text,
            v: 5.25
        }, function(data) {

            ScreenBlocks.txt.clearValue();

            setTimeout(function() {
                getHistory(message_id);
            }, 500);

        });

    };



    /**
         _                __                  _   _
        | |              / _|                | | (_)
      __| | ___  _ __   | |_ _   _ _ __   ___| |_ _  ___  _ __  ___
     / _` |/ _ \| '_ \  |  _| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
    | (_| | (_) | |_) | | | | |_| | | | | (__| |_| | (_) | | | \__ \
     \__,_|\___/| .__/  |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
                | |
                |_|
    */
    // получение id пользователя которого выбираем в списке
    this.getID = function(str) {
        var re = /__\|(\d+)\|__/g;
        var myArray = re.exec(str);

        if (myArray && myArray[1]) {
            return myArray[1];
        } else {
            return false;
        }
    };

    //  Отобразить сообщения как прочитанные. Передается массив с id сообщений
    var can_read = true;
    this.read = function(mid) {
        if (can_read) {

            if (mid.length > 0) {
                mid = mid.join(',');
                vk.request('messages.markAsRead', {
                    mids: mid
                }, function(data) {
                    can_read = true;
                });
            }

            can_read = false;
        }
    };



    //    Отображать дату в нужном формате
    this._date = function(date) {
        var d = new Date(date * 1000);
        return d.getHours() + ':' + d.getMinutes() + ' ' + d.getDate() + '.' + d.getMonth() + '.' + d.getFullYear();
    };


    // массив со списком друзей
    var uidFriends = {};
    var user_ids = [];


    var _friend = function(id) {

        if (uidFriends[id]) {
            return uidFriends[id];
        }

        user_ids.push(id);

        setTimeout(function() {

            if (user_ids.length === 0) {
                return false;
            }

            for (var i in user_ids) {
                user_ids[i] = parseInt(user_ids[i], 10);
            }


            if (user_ids.length > 0) {

                vk.request('users.get', {
                    user_ids: user_ids.join(','),
                    fields: 'verifieds',
                    name_case: 'Nom',
                    v: 5.8
                }, function(data) {

                    if (data && data.response) {

                        for (var i = 0; i < data.response.length; i++) {
                            uidFriends[data.response[i].id] = data.response[i].first_name + ' ' + data.response[i].last_name;
                        }

                        user_ids = [];

                    }

                });

            }

        }, 300);

        return id;
    };


    // =========================================
    // Добавляем свое имя в список пользователей
    _friend(require(__dirname + '/token.json').user_id);


    return this;
};